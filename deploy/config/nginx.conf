##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;
	listen 80 ;
    server_name z-gour.com;
    return 301 https://$server_name$request_uri;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}
server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name z-gour.com;

        ssl_certificate /etc/letsencrypt/live/z-gour.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/z-gour.com/privkey.pem;
#
        root /var/sites/z-gour.com/dist;
        index index.html;
#        index /var/sites/z-gour.com/dist/index.html;
        location / {
                try_files $uri $uri/ =404;
        }

		location /api/sys/ {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
#		  add_header 'Access-Control-Allow-Origin' $http_origin;
#		  add_header 'Access-Control-Allow-Origin' *;
	          add_header 'Access-Control-Allow-Credentials' 'true';
   		 	  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	          add_header 'Access-Control-Allow-Headers' 'DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
   		 	  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
   		 	  if ($request_method = 'OPTIONS') {
           			add_header 'Access-Control-Max-Age' 1728000;
          			add_header 'Content-Type' 'text/plain; charset=utf-8';
           		 	add_header 'Content-Length' 0;
	                return 204;
  		 		}

			proxy_pass  http://127.0.0.1:8080/;

		}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
